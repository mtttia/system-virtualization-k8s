apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
spec:
  replicas: 3 
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: server
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: server
          image: mtttia/server:latest
          ports:
            - containerPort: 3000
          resources:
            limits:
              memory: "256Mi"
              cpu: "250m"
            requests:
              memory: "128Mi"
              cpu: "125m"
          envFrom:
            - configMapRef:
                name: server-config
            - secretRef:
                name: server-secret
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
    name: server-service
spec:
    selector:
        app: server
    ports:
        - port: 3000
          targetPort: 3000
    type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: server-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: server.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: server-service
                port:
                  number: 3000
